/*************************************************************************
 **  tigerc/test/TestSemant.java 
 **
 **  Author:  John Lasseter
 **  Created:  10/27/2011
 **  Last Modified: 12/09/2011
 **
 **  This driver file is suitable for testing the parser generated by your
 **  CUP specification and your implementation of SemantV, the type 
 **  checker/translator. 
 ** 
 ************************************************************************/
package test;
import tigerc.syntax.parse.*;
import tigerc.syntax.absyn.*;

import tigerc.util.ErrorMsg;
import tigerc.util.AbsynPrintVisitor;
import tigerc.util.Symbol;
import tigerc.semant.analysis.SemantV;

public class TestSemant {
    public static void main(String[] args) {
        String fname;
        java.io.InputStream inp;
        ErrorMsg errorMsg;
        try {
            if (args.length >= 1) {
                fname = args[0];
                errorMsg = new ErrorMsg(fname);
                inp = new java.io.FileInputStream(fname);
            } else {
                errorMsg = new ErrorMsg(null);
                inp = System.in;
            }

            TigerParse parser =
                    new TigerParse(new TigerLex(inp, errorMsg), errorMsg);
            IAbsyn prog = (IAbsyn) parser./* debug_ */parse().value;
            inp.close();

            AbsynPrintVisitor prettyprint = new AbsynPrintVisitor(System.err);
            System.err.println("SYNTAX:  ");
            prog.accept(prettyprint);

            System.err.println("\n--------------------\n");

            SemantV typechecker = new SemantV(errorMsg);
            prog.accept(typechecker);

            System.err.println("TYPE:  " + typechecker.getType());

            if (errorMsg.anyErrors)
                System.err.println("Error - no code was generated.");
        } catch (java.io.FileNotFoundException e) {
            System.err.println("Cannot open input file " + args[0] + "");
            System.exit(1);
        } catch (Throwable e) {
            System.err.println("Error: " + e);
            e.printStackTrace();
        }
    }
}